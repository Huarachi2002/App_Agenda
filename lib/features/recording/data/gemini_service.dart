import 'package:app_task/core/constants/api_endpoints.dart';
import 'package:google_generative_ai/google_generative_ai.dart';

class GeminiService {
  static const String apiKey = API_OPEN_IA; // 游댳 Reempl치zalo con tu API Key de Gemini

  final GenerativeModel _model = GenerativeModel(
    model: 'gemini-pro', // 游댳 Usa 'gemini-pro' para texto o 'gemini-pro-vision' si necesitas im치genes
    apiKey: apiKey,
  );

  /// Env칤a el texto de la clase y obtiene un resumen con subt칤tulos.
  Future<String?> getSummary(String transcript) async {
    try {
      final content = [
        Content.text(
            "Resume estrictamente el siguiente texto sin agregar informaci칩n adicional ni modificar el significado original. "
                "Estructura el resumen en formato de puntos clave, organiz치ndolo con subt칤tulos representativos seg칰n los temas mencionados. "
                "No agregues contenido extra ni reformules el texto de manera creativa. "
                "Mant칠n el resumen fiel al contenido original y enfocado en los puntos m치s importantes.\n\n"
                "Texto a resumir:\n---\n$transcript"
        )
      ];

      print("========= RESPONE getSummary ==========");
      final response = await _model.generateContent(content);
      print("response: " + response.toString());
      return response.text; // 游댳 Retorna el resumen generado por Gemini
    } catch (e) {
      print("Error en Gemini: $e");
      return null;
    }
  }
}
